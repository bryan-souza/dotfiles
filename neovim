" General neovim configurations
set linebreak

set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4

set number

" Load plugins
call plug#begin('~/.local/share/nvim/plugged')

" Plug 'lotabout/skim', { 'dir': '~/.skim', 'do': './install' }
Plug 'neoclide/coc.nvim', {'branch': 'master', 'do': 'yarn install --frozen-lockfile'}

Plug 'tmux-plugins/vim-tmux' " TMUX .conf syntax support
Plug 'nvim-lua/plenary.nvim' 
Plug 'nvim-telescope/telescope.nvim'
Plug 'sharkdp/fd'
Plug 'nvim-treesitter/nvim-treesitter'
Plug 'hoob3rt/lualine.nvim' " Cool & fast statusline
Plug 'kyazdani42/nvim-web-devicons' " Icons for lualine
Plug 'Mofiqul/dracula.nvim' " Dracula theme

call plug#end()

" Set-up lualine
lua << EOF
require('lualine').setup {
  options = {
    theme = 'dracula-nvim'
  }
}
EOF

" Configure CoC integration

" TextEdit might fail if hidden is not set
set hidden

" Some servers have issues with backup files
set nobackup
set nowritebackup

" Give more space for displaying messages
set cmdheight=2

" Lower updatetime for better experience
set updatetime=300

" Don't pass messages to |ins-completion-menu|
set shortmess+=c

" Always show the signcolumn, otherwise it would shift the text
" each time diagnostics appear/become resolved
if has("nvim-0.5.0") || has("patch-8.1.1564")
    " Recently vim can merge signcolumn and numbercolumn into one
    set signcolumn=number
else
    set signcolumn=yes
endif

" Use tab for trigger completion with characters ahead and navigate
" NOTE: use command ':verbose imap <tab>' to make sure tab is not mapped by
" other plugin before putting this into your config
inoremap <silent><expr> <TAB>
    \ pumvisible() ? "\<C-n>" :
    \ <SID>check_back_space() ? "\<TAB>" :
    \ coc#refresh()
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"

function! s:check_back_space() abort
    let col = col('.') - 1
    return !col || getline('.')[col - 1] =~# '\s'
endfunction

" Use <C-Space> to trigger completion
if has('nvim')
    inoremap <silent><expr> <c-space> coc#refresh()
else
    inoremap <silent><expr> <c-@> coc#refresh()
endif

" GoTo code navigation
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)

" Highlight a symbol and its references when holding the cursor
autocmd CursorHold * silent call CocActionAsync('highlight')

" Symbol renaming
nmap <leader>rn <Plug>(coc-rename)
